{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","contact","value","map","element","index","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","Form","onSubmit","Field","type","event","target","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","object","className","Object","entries","TileList","objectsToDisplay","AppointmentsPage","appoinments","addNewApp","useState","e","preventDefault","ContactForm","name","setName","phone","setPhone","email","setEmail","isDuplicated","error","pattern","Message","header","content","ContactsPage","addNewContact","setIsDuplicated","useEffect","namesList","i","length","App","setContacts","setAppoinments","ROUTES","to","activeClassName","exact","path","newContact","prev","newApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69d07890.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, onChange, contact}) => {\r\n  return (\r\n    <select onChange={onChange} value={contact}>\r\n      <option value=''>--No contact selected--</option>\r\n      {contacts.map((element, index)=>{\r\n        return  <option key={index} value={element['name']}>\r\n                  {element['name']}\r\n                </option>\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Field>\r\n        <label>Title:</label>\r\n        <input type=\"text\" value={title} onChange={(event) => setTitle(event.target.value)}></input>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Date:</label>\r\n        <input type=\"date\" value={date} onChange={(event) => setDate(event.target.value)} min={getTodayString()}></input>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Time:</label>\r\n        <input type=\"time\" value={time} onChange={(event) => setTime(event.target.value)}></input>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Contact:</label>\r\n        <ContactPicker contacts={contacts} onChange={(event) => setContact(event.target.value)} contact={contact}/> \r\n      </Form.Field>\r\n      <Form.Field>\r\n        <input type='submit'/>\r\n      </Form.Field>\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({object}) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n     {Object.entries(object).map((element, index)=>{\r\n       return <p key={index} className={index===0?\"tile-title\":\"tile\"}>\r\n                  {element[1]}\r\n              </p>\r\n       })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\"\r\n\r\nexport const TileList = ({objectsToDisplay}) => {\r\n  return (\r\n    <div>\r\n      {objectsToDisplay.map((object, index)=>{\r\n        return (<Tile key={index} object={object} />);}\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm'\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\n\r\nexport const AppointmentsPage = ({appoinments, addNewApp, contacts}) => {\r\n  //States\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addNewApp(title, contact, date, time)\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          contacts={contacts}\r\n          title={title} \r\n          setTitle={setTitle}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList objectsToDisplay={appoinments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Message } from \"semantic-ui-react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n  isDuplicated\r\n}) => {\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} error={isDuplicated}>\r\n      <Form.Field>\r\n        <label>Name:</label>\r\n        <input type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Phone:</label>\r\n        <input type=\"text\" value={phone} onChange={(event) => setPhone(event.target.value)} pattern=\"[0-9]+\"/>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Email:</label>\r\n        <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)}/>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <input type='submit'/>\r\n        <Message error header='Opps!' content='This contact already exists'/>\r\n      </Form.Field>\r\n      \r\n    </Form>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const ContactsPage = ({contacts, addNewContact}) => {\r\n  //States\r\n  const [name, setName] = useState('');\r\n  const[phone, setPhone] = useState('');\r\n  const[email, setEmail] = useState('');\r\n  const[isDuplicated, setIsDuplicated] = useState(false);\r\n  \r\n //Hooks\r\n useEffect(()=>{\r\n  let namesList = contacts.map(value => value['name'])\r\n  for (let i = 0; i <= namesList.length-1; i++){\r\n    if (namesList[i]===name){\r\n      setIsDuplicated(true);\r\n    }\r\n  }\r\n },[name]);\r\n\r\n   //Submission\r\n   const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isDuplicated === false){\r\n      addNewContact(name, phone, email);\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm\r\n          name={name} setName={setName}\r\n          phone={phone} setPhone={setPhone}\r\n          email={email} setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n          isDuplicated={isDuplicated}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList objectsToDisplay={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  \r\n  const [contacts, setContacts] = useState([{'name':'Name1', 'phone':'phone1', 'email':'email1'},\r\n                                            {'name':'Name2', 'phone2':'phone2', 'email':'email2'}]);\r\n  const [appoinments, setAppoinments] = useState([{'title':'title1', 'contact':'Name1', 'date':'date1', 'time':'time1'}]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const addNewContact = (name, phone, email)=>{\r\n    let newContact = {'name':name, 'phone':phone, 'email':email};\r\n    setContacts((prev) =>{\r\n      return [...prev, newContact]\r\n    });\r\n  }\r\n\r\n  const addNewApp = (title, contact, date, time) =>{\r\n    let newApp = {'title':title, 'contact':contact, 'date':date, 'time':time};\r\n    setAppoinments((prev) =>{\r\n      return [...prev, newApp]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addNewContact={addNewContact}/>\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage appoinments={appoinments} addNewApp={addNewApp} contacts={contacts}/>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}